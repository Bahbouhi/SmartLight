package com.example.bluetooth;

import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;

import android.app.Activity;
import android.app.ListActivity;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothDevice;
import android.bluetooth.BluetoothSocket;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Build;
import android.os.Bundle;
import android.os.ParcelUuid;
import android.os.SystemClock;
import android.text.method.ScrollingMovementMethod;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.CompoundButton;
import android.widget.ListView;
import android.widget.TextClock;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.ToggleButton;

import org.w3c.dom.Text;

import java.io.IOException;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Set;
import java.util.UUID;

import static android.bluetooth.BluetoothAdapter.ACTION_DISCOVERY_STARTED;
import static android.bluetooth.BluetoothAdapter.getDefaultAdapter;

public class MainActivity extends AppCompatActivity{

    ArrayList<BluetoothDevice> mAdapter = new ArrayList<BluetoothDevice>();
    ArrayList<String> names = new ArrayList<String>();

    static public  BluetoothSocket bTSocket = null;
    @RequiresApi(api = Build.VERSION_CODES.KITKAT)
    public boolean connect(BluetoothDevice bTDevice, UUID mUUID) {
        BluetoothSocket temp = null;
        try {
            bTSocket = bTDevice.createRfcommSocketToServiceRecord(mUUID);
        } catch (IOException e) {
            Toast.makeText(getApplicationContext(), "Could not create RFCOMM socket: "+e.toString(), Toast.LENGTH_LONG).show();
            return false;
        }
        try {
            bTSocket.connect();
            Intent intent =  new Intent(this, LED_CONTROL.class);
            //intent.putExtra("result", bTSocket);
            startActivity(intent);
        } catch(IOException e) {
            Toast.makeText(getApplicationContext(), "Could not connect: "+e.toString(), Toast.LENGTH_LONG).show();
            try {
                bTSocket.close();
            } catch(IOException close) {
                Toast.makeText(getApplicationContext(), "Could not close connection: "+e.toString(), Toast.LENGTH_LONG).show();
            }
            return false;
        }
        return true;
    }

    BroadcastReceiver receiver = new BroadcastReceiver() {
        @Override
        public void onReceive(Context context, Intent intent) {
            String action = intent.getAction();
            if (BluetoothDevice.ACTION_FOUND.equals(action)) {
                BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
                if(mAdapter.size() == 0) {
                    mAdapter.add(device);
                    names.add(device.getName());
                }
                else {
                    if(!mAdapter.contains(device)) {
                        mAdapter.add(device);
                        names.add(device.getName());
                    }
                }
                ArrayAdapter<String> adapter = new ArrayAdapter<String>(getBaseContext(),R.layout.textview,names);
                ListView listView = findViewById(R.id.lv);
                listView.setAdapter(adapter);
                listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                    @RequiresApi(api = Build.VERSION_CODES.KITKAT)
                    @Override
                    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                        // Get the selected item text from ListView
                        String selectedItem = (String) parent.getItemAtPosition(position);
                        for(BluetoothDevice i: mAdapter){
                            if(i.getName().equals(selectedItem)) {
                                Toast.makeText(getApplicationContext(), i.getName(), Toast.LENGTH_LONG).show();
                                try{
                                    i.createBond();
                                    connect(i,UUID.fromString("00001101-0000-1000-8000-00805F9B34FB"));
                                }
                                catch (Exception e){
                                    Toast.makeText(getApplicationContext(), "NO", Toast.LENGTH_LONG).show();
                                }
                                break;
                            }
                        }
                    }
                });
            }
            else if (BluetoothAdapter.ACTION_DISCOVERY_STARTED.equals(intent.getAction())) {
                Toast.makeText(getApplicationContext(), "Scan Started...", Toast.LENGTH_LONG).show();
            }
            else if (BluetoothAdapter.ACTION_DISCOVERY_FINISHED.equals(intent.getAction())) {
                ToggleButton m = findViewById(R.id.scan);
                m.setChecked(false);
                Toast.makeText(getApplicationContext(), "Scan Finished. "+mAdapter.size(), Toast.LENGTH_SHORT).show();
            }
        }
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

       // TextView t = findViewById(R.id.textView);

        //t.setMovementMethod(new ScrollingMovementMethod());
        BluetoothAdapter BTAdapter = getDefaultAdapter();

        ListView listview = findViewById(R.id.lv);

        ToggleButton scan = findViewById(R.id.scan);
        scan.setText("Start Scan");
        scan.setTextOff("Start Scan");
        scan.setTextOn("Stop Scan");
        scan.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                BluetoothAdapter bTAdapter = getDefaultAdapter();
                if (isChecked) {
                    mAdapter.clear();
                    names.clear();
                    IntentFilter filter = new IntentFilter();
                    filter.addAction(BluetoothDevice.ACTION_FOUND);
                    filter.addAction(BluetoothAdapter.ACTION_DISCOVERY_STARTED);
                    filter.addAction(BluetoothAdapter.ACTION_DISCOVERY_FINISHED);
                    registerReceiver(receiver, filter);
                    bTAdapter.startDiscovery();
                }
                else{
                    unregisterReceiver(receiver);
                    bTAdapter.cancelDiscovery();
                }
            }
        });

        // Phone does not support Bluetooth so let the user know and exit.
        if (BTAdapter == null)
            Toast.makeText(getApplicationContext(), "Device does not support Bluetooth", Toast.LENGTH_LONG).show();
        else {
            if (!BTAdapter.isEnabled()) {
                Intent enableBT = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
                startActivityForResult(enableBT, 1);
                //SystemClock.sleep(3000);
            }
            while (!BTAdapter.isEnabled()) ;
        }
    }
}
